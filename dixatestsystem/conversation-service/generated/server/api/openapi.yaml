openapi: 3.0.2
info:
  contact:
    email: ano@dixa.com
  description: Conversation service handles orchestration of conversations at Dixa.
  title: Conversation Service - OpenAPI 3.0
  version: 0.0.1
servers:
- url: /v1
paths:
  /conversations:
    get:
      operationId: getConversations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversations'
          description: Successfuly operation
      summary: Get all Conversations
      x-eov-operation-handler: controllers/DefaultController
  /conversation/${id}:
    delete:
      operationId: deleteConversation
      parameters:
      - description: ID of a Conversation
        example: e0064a57-b327-4f77-82d7-8042911613e8
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "404":
          description: Conversation not found
      summary: Delete Conversation
      x-eov-operation-handler: controllers/DefaultController
    get:
      operationId: getConversation
      parameters:
      - description: ID of a Conversation
        example: e0064a57-b327-4f77-82d7-8042911613e8
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: Successful operation
        "404":
          description: Conversation Not Found
      summary: Get a single Conversation
      x-eov-operation-handler: controllers/DefaultController
    post:
      operationId: addConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Conversation'
        description: Create a new Conversation
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid inputs
      summary: Add a new Conversation
      x-eov-operation-handler: controllers/DefaultController
  /conversation/${id}/message:
    post:
      operationId: addMessageToConversation
      parameters:
      - description: ID of a Conversation the message should be added to
        example: e0064a57-b327-4f77-82d7-8042911613e8
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationMessage'
        description: Add message to conversation
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Invalid input
      summary: Add message to conversation
      x-eov-operation-handler: controllers/DefaultController
  /conversation/${id}/messages:
    get:
      operationId: getMessagesInConversation
      parameters:
      - description: ID of a Conversation the message should be added to
        example: e0064a57-b327-4f77-82d7-8042911613e8
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationMessages'
          description: Successful Operation
        "404":
          description: Not Found
      summary: Get all Messages in the Conversation
      x-eov-operation-handler: controllers/DefaultController
components:
  schemas:
    Conversation:
      example:
        closed_at: 2017-07-21T17:32:28Z
        channel: widget
        created_at: 2017-07-21T17:32:28Z
        id: e0064a57-b327-4f77-82d7-8042911613e8
        status: open
      properties:
        id:
          example: e0064a57-b327-4f77-82d7-8042911613e8
          format: uuid
          type: string
        created_at:
          example: 2017-07-21T17:32:28Z
          format: date-time
          type: string
        closed_at:
          example: 2017-07-21T17:32:28Z
          format: date-time
          type: string
        channel:
          description: Channel that originated the Conversation
          enum:
          - widget
          - telephony
          - email
          - whatsapp
          - messenger
          example: widget
          type: string
        status:
          description: Status of a Conversation
          enum:
          - pending
          - unassigned
          - open
          - closed
          example: open
          type: string
    ConversationMessage:
      example:
        created_at: 2017-07-21T17:32:28Z
        message: message
        direction: inbound
      properties:
        message:
          description: Message to be added to the conversation
          type: string
        direction:
          description: Direction in which the message was sent
          enum:
          - inbound
          - outbound
          type: string
        created_at:
          example: 2017-07-21T17:32:28Z
          format: date-time
          type: string
    Conversations:
      items:
        $ref: '#/components/schemas/Conversation'
      type: array
    ConversationMessages:
      items:
        $ref: '#/components/schemas/ConversationMessage'
      type: array
