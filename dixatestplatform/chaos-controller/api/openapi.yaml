openapi: 3.0.2
info:
  contact:
    email: ano@dixa.com
  description: Platform for executing and monitoring Chaos experiments on the Dixa
    Test System, supporting the microservice-based system resiliency experimentation.
  title: Dixa Testing Platform - OpenAPI 3.0
  version: 0.0.1
servers:
- url: http://chaos-controller/chaos
- url: http://localhost:8080/chaos
tags:
- description: Definitions for test scenarios.
  name: tests
- description: Results of test scenarios.
  name: runs
paths:
  /tests:
    get:
      operationId: getTests
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tests'
          description: Successfuly operation
      summary: Get all tests
      tags:
      - tests
      x-eov-operation-handler: controllers/TestsController
  /test:
    post:
      operationId: addTest
      requestBody:
        content:
          application/json:
            example:
              displayName: message-degraded-service
              upstreamService: conversation-service
              downstreamService: message-service
              spec:
                fault:
                  abort:
                    percentage:
                      value: "10"
                    httpStatus: "500"
                  delay:
                    percentage:
                      value: 50
                    fixedDelay: 2s
              successCriterion:
                name: SLO
                type: availability
                service: conversation-service
                comparisonOperator: '>'
                threshold: "0.7"
            schema:
              $ref: '#/components/schemas/Test'
        description: Create a new Test
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid inputs
      summary: Add a new Test
      tags:
      - tests
      x-eov-operation-handler: controllers/TestsController
  /test/{id}:
    delete:
      operationId: deleteTest
      parameters:
      - description: ID of a Test
        example: e0064a57-b327-4f77-82d7-8042911613e8
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "404":
          description: Test not found
      summary: Delete Test
      tags:
      - tests
      x-eov-operation-handler: controllers/TestsController
    get:
      operationId: getTest
      parameters:
      - description: ID of a Test
        example: e0064a57-b327-4f77-82d7-8042911613e8
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
          description: Successful operation
        "404":
          description: Test Not Found
      summary: Get a single Test
      tags:
      - tests
      x-eov-operation-handler: controllers/TestsController
  /test/{id}/run/{mode}:
    post:
      operationId: runTest
      parameters:
      - description: ID of the test to execute
        example: e0064a57-b327-4f77-82d7-8042911613e8
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: mode
        required: true
        schema:
          enum:
          - canary
          - production
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingSpec'
        description: Traffic routing specificiation for the canary ingress traffic.
        required: false
      responses:
        "200":
          description: Test has started successfuly
        "400":
          description: Mode not supported
        "404":
          description: Test not found
      summary: Execute test scenarios.
      tags:
      - tests
      x-eov-operation-handler: controllers/TestsController
  /test/{id}/stop:
    post:
      operationId: stopTest
      parameters:
      - description: ID of the test to stop
        example: e0064a57-b327-4f77-82d7-8042911613e8
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Test has started successfuly
        "404":
          description: Test not found
      summary: Stops the test scenario immediately, in a Big Red Button fashion.
      tags:
      - tests
      x-eov-operation-handler: controllers/TestsController
  /runs:
    get:
      operationId: getRuns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runs'
          description: Successfuly operation
      summary: Get all Runs
      tags:
      - runs
      x-eov-operation-handler: controllers/RunsController
  /run:
    post:
      operationId: addRun
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Run'
        description: Create a new Run
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid inputs
      summary: Add a new Run
      tags:
      - runs
      x-eov-operation-handler: controllers/RunsController
  /run/{id}:
    delete:
      operationId: deleteRun
      parameters:
      - description: ID of a Run
        example: e0064a57-b327-4f77-82d7-8042911613e8
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "404":
          description: Run not found
      summary: Delete Run
      tags:
      - runs
      x-eov-operation-handler: controllers/RunsController
    get:
      operationId: getRun
      parameters:
      - description: ID of a Run
        example: e0064a57-b327-4f77-82d7-8042911613e8
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
          description: Successful operation
        "404":
          description: Run Not Found
      summary: Get a single Run
      tags:
      - runs
      x-eov-operation-handler: controllers/RunsController
    patch:
      operationId: patchRun
      parameters:
      - description: ID of a Run to patch
        example: e0064a57-b327-4f77-82d7-8042911613e8
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Run'
        description: Patch to be applied to the Run
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid inputs
        "404":
          description: No such Run found
      summary: Patch Run
      tags:
      - runs
      x-eov-operation-handler: controllers/RunsController
  /run/{id}/log:
    post:
      operationId: appendLog
      parameters:
      - description: ID of a Run
        example: e0064a57-b327-4f77-82d7-8042911613e8
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogEntry'
        description: Append log entry to Run
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid inputs
      summary: Append log entry to Run
      tags:
      - runs
      x-eov-operation-handler: controllers/RunsController
components:
  schemas:
    Test:
      example:
        displayName: long-timeout
        downstreamService: message-service
        description: description
        upstreamService: conversation-service
        successCriterion:
          service: service
          comparisonOperator: '>'
          name: name
          threshold: 1.4658129805029452
          type: latency
        spec:
          fault:
            delay:
              percentage:
                value: 6.027456183070403
              percent: 0
            abort:
              percentage:
                value: 6.027456183070403
      properties:
        displayName:
          example: long-timeout
          type: string
        description:
          description: Description of a tests scenario.
          type: string
        upstreamService:
          description: Name of the upstream source service from which traffic flows
            to the downstreamService.
          example: conversation-service
          type: string
        downstreamService:
          description: Name of the downstream target service to which traffic flows
            from the upstreamService.
          example: message-service
          type: string
        spec:
          $ref: '#/components/schemas/Test_spec'
        successCriterion:
          $ref: '#/components/schemas/Test_successCriterion'
    Tests:
      items:
        $ref: '#/components/schemas/Test'
      type: array
    Run:
      example:
        mode: production
        routingSpec:
          routingType: split
          weight: 0.8008281904610115
        created_at: 2017-07-21T17:32:28Z
        testId: e0064a57-b327-4f77-82d7-8042911613e8
        id: e0064a57-b327-4f77-82d7-8042911613e8
        logs:
        - severity: INFO
          message: message
          timestamp: timestamp
        - severity: INFO
          message: message
          timestamp: timestamp
        results:
          downstreamService:
            name: conversation-service
            logDump: logDump
          upstreamService:
            name: conversation-service
            logDump: logDump
          status: PASS
        status: scheduled
      properties:
        id:
          example: e0064a57-b327-4f77-82d7-8042911613e8
          format: uuid
          type: string
        testId:
          example: e0064a57-b327-4f77-82d7-8042911613e8
          format: uuid
          type: string
        status:
          description: Status of the Test
          enum:
          - scheduled
          - running
          - stopped
          - crashed
          - completed
          type: string
        mode:
          enum:
          - production
          - canary
          type: string
        routingSpec:
          $ref: '#/components/schemas/RoutingSpec'
        created_at:
          example: 2017-07-21T17:32:28Z
          format: date-time
          type: string
        logs:
          items:
            $ref: '#/components/schemas/LogEntry'
          type: array
        results:
          $ref: '#/components/schemas/Run_results'
    Runs:
      items:
        $ref: '#/components/schemas/Run'
      type: array
    LogEntry:
      example:
        severity: INFO
        message: message
        timestamp: timestamp
      properties:
        severity:
          enum:
          - INFO
          - FATAL
          type: string
        message:
          type: string
        timestamp:
          type: string
      type: object
    RoutingSpec:
      example:
        routingType: split
        weight: 0.8008281904610115
      properties:
        routingType:
          description: The way in which traffic is meant to be routed to the canary
            environment. Split - migrates portion of traffic from primary environment
            to canary. Mirror - mirrors portion of the traffic from the primary to
            canary environment.
          enum:
          - split
          - mirror
          type: string
        weight:
          description: The percentage of total traffic to be routed to the canary
            environment.
          type: number
      type: object
    istio.networking.v1alpha3.HTTPFaultInjection:
      description: HTTPFaultInjection can be used to specify one or more faults to
        inject while forwarding HTTP requests to the destination specified in a route.
        Fault specification is part of a VirtualService rule. Faults include aborting
        the Http request from downstream service, and/or delaying proxying of requests.
        A fault rule MUST HAVE delay or abort or both.
      example:
        delay:
          percentage:
            value: 6.027456183070403
          percent: 0
        abort:
          percentage:
            value: 6.027456183070403
      properties:
        delay:
          $ref: '#/components/schemas/istio.networking.v1alpha3.HTTPFaultInjection.Delay'
        abort:
          $ref: '#/components/schemas/istio.networking.v1alpha3.HTTPFaultInjection.Abort'
      type: object
    istio.networking.v1alpha3.HTTPFaultInjection.Delay:
      description: 'Delay specification is used to inject latency into the request
        forwarding path. The following example will introduce a 5 second delay in
        1 out of every 1000 requests to the "v1" version of the "reviews" service
        from all pods with label env: prod'
      example:
        percentage:
          value: 6.027456183070403
        percent: 0
      oneOf:
      - not:
          anyOf:
          - properties:
              fixedDelay:
                description: 'Add a fixed delay before forwarding the request. Format:
                  1h/1m/1s/1ms. MUST be >=1ms.'
                type: string
            required:
            - fixedDelay
          - properties:
              exponentialDelay:
                type: string
            required:
            - exponentialDelay
      - $ref: '#/components/schemas/istio_networking_v1alpha3_HTTPFaultInjection_Delay_oneOf'
      - $ref: '#/components/schemas/istio_networking_v1alpha3_HTTPFaultInjection_Delay_oneOf_1'
      properties:
        percent:
          deprecated: true
          description: Percentage of requests on which the delay will be injected
            (0-100). Use of integer `percent` value is deprecated. Use the double
            `percentage` field instead.
          format: int32
          type: integer
        percentage:
          $ref: '#/components/schemas/istio.networking.v1alpha3.Percent'
      type: object
    istio.networking.v1alpha3.Percent:
      description: Percent specifies a percentage in the range of [0.0, 100.0].
      example:
        value: 6.027456183070403
      properties:
        value:
          format: double
          type: number
      type: object
    istio.networking.v1alpha3.HTTPFaultInjection.Abort:
      description: Abort specification is used to prematurely abort a request with
        a pre-specified error code. The following example will return an HTTP 400
        error code for 1 out of every 1000 requests to the "ratings" service "v1".
      example:
        percentage:
          value: 6.027456183070403
      oneOf:
      - not:
          anyOf:
          - properties:
              httpStatus:
                description: HTTP status code to use to abort the Http request.
                format: int32
                type: integer
            required:
            - httpStatus
          - properties:
              grpcStatus:
                type: string
            required:
            - grpcStatus
          - properties:
              http2Error:
                type: string
            required:
            - http2Error
      - $ref: '#/components/schemas/istio_networking_v1alpha3_HTTPFaultInjection_Abort_oneOf'
      - $ref: '#/components/schemas/istio_networking_v1alpha3_HTTPFaultInjection_Abort_oneOf_1'
      - $ref: '#/components/schemas/istio_networking_v1alpha3_HTTPFaultInjection_Abort_oneOf_2'
      properties:
        percentage:
          $ref: '#/components/schemas/istio.networking.v1alpha3.Percent'
      type: object
    Test_spec:
      description: Chaos Test specification, defining perturbations to be injected
        into the system.
      example:
        fault:
          delay:
            percentage:
              value: 6.027456183070403
            percent: 0
          abort:
            percentage:
              value: 6.027456183070403
      properties:
        fault:
          $ref: '#/components/schemas/istio.networking.v1alpha3.HTTPFaultInjection'
      type: object
    Test_successCriterion:
      description: Acceptance criterion for PASSing the test.
      example:
        service: service
        comparisonOperator: '>'
        name: name
        threshold: 1.4658129805029452
        type: latency
      properties:
        name:
          type: string
        type:
          enum:
          - latency
          - traffic
          - errors
          - saturation
          - availability
          type: string
        service:
          type: string
        comparisonOperator:
          enum:
          - '>'
          - <
          - =
          type: string
        threshold:
          type: number
      type: object
    Run_results_upstreamService:
      example:
        name: conversation-service
        logDump: logDump
      properties:
        name:
          example: conversation-service
          type: string
        logDump:
          type: string
      type: object
    Run_results:
      example:
        downstreamService:
          name: conversation-service
          logDump: logDump
        upstreamService:
          name: conversation-service
          logDump: logDump
        status: PASS
      properties:
        status:
          enum:
          - PASS
          - FAIL
          type: string
        upstreamService:
          $ref: '#/components/schemas/Run_results_upstreamService'
        downstreamService:
          $ref: '#/components/schemas/Run_results_upstreamService'
      type: object
    istio_networking_v1alpha3_HTTPFaultInjection_Delay_oneOf:
      properties:
        fixedDelay:
          description: 'Add a fixed delay before forwarding the request. Format: 1h/1m/1s/1ms.
            MUST be >=1ms.'
          type: string
      required:
      - fixedDelay
    istio_networking_v1alpha3_HTTPFaultInjection_Delay_oneOf_1:
      properties:
        exponentialDelay:
          type: string
      required:
      - exponentialDelay
    istio_networking_v1alpha3_HTTPFaultInjection_Abort_oneOf:
      properties:
        httpStatus:
          description: HTTP status code to use to abort the Http request.
          format: int32
          type: integer
      required:
      - httpStatus
    istio_networking_v1alpha3_HTTPFaultInjection_Abort_oneOf_1:
      properties:
        grpcStatus:
          type: string
      required:
      - grpcStatus
    istio_networking_v1alpha3_HTTPFaultInjection_Abort_oneOf_2:
      properties:
        http2Error:
          type: string
      required:
      - http2Error
